// <auto-generated />
using System;
using Kollegeni.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kollegeni.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    partial class BookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kollegeni.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FælleslokaleId")
                        .HasColumnType("int");

                    b.Property<int>("ResidensId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sluttidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Starttidspunkt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FælleslokaleId");

                    b.HasIndex("ResidensId");

                    b.ToTable("Bookinger");
                });

            modelBuilder.Entity("Kollegeni.Models.Bruger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brugernavn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("KodeOrd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sprog")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brugere");

                    b.HasDiscriminator().HasValue("Bruger");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Kollegeni.Models.BrugerResidens", b =>
                {
                    b.Property<int>("BrugerId")
                        .HasColumnType("int");

                    b.Property<int>("ResidensId")
                        .HasColumnType("int");

                    b.HasKey("BrugerId", "ResidensId");

                    b.HasIndex("ResidensId");

                    b.ToTable("BrugerResidenser");
                });

            modelBuilder.Entity("Kollegeni.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResidensId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Sluttidspunkt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Starttidspunkt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResidensId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Kollegeni.Models.Fælleslokale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fælleslokaler");
                });

            modelBuilder.Entity("Kollegeni.Models.Residens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Størrelse")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Residenser");
                });

            modelBuilder.Entity("Kollegeni.Models.Admin", b =>
                {
                    b.HasBaseType("Kollegeni.Models.Bruger");

                    b.Property<string>("Attribute")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("Kollegeni.Models.Beboer", b =>
                {
                    b.HasBaseType("Kollegeni.Models.Bruger");

                    b.HasDiscriminator().HasValue("Beboer");
                });

            modelBuilder.Entity("Kollegeni.Models.Booking", b =>
                {
                    b.HasOne("Kollegeni.Models.Fælleslokale", "Fælleslokale")
                        .WithMany("Bookinger")
                        .HasForeignKey("FælleslokaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kollegeni.Models.Residens", "Residens")
                        .WithMany("Bookinger")
                        .HasForeignKey("ResidensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fælleslokale");

                    b.Navigation("Residens");
                });

            modelBuilder.Entity("Kollegeni.Models.BrugerResidens", b =>
                {
                    b.HasOne("Kollegeni.Models.Bruger", "Bruger")
                        .WithMany("BrugerResidenser")
                        .HasForeignKey("BrugerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kollegeni.Models.Residens", "Residens")
                        .WithMany("BrugerResidenser")
                        .HasForeignKey("ResidensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bruger");

                    b.Navigation("Residens");
                });

            modelBuilder.Entity("Kollegeni.Models.Event", b =>
                {
                    b.HasOne("Kollegeni.Models.Residens", "Residens")
                        .WithMany("Events")
                        .HasForeignKey("ResidensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Residens");
                });

            modelBuilder.Entity("Kollegeni.Models.Bruger", b =>
                {
                    b.Navigation("BrugerResidenser");
                });

            modelBuilder.Entity("Kollegeni.Models.Fælleslokale", b =>
                {
                    b.Navigation("Bookinger");
                });

            modelBuilder.Entity("Kollegeni.Models.Residens", b =>
                {
                    b.Navigation("Bookinger");

                    b.Navigation("BrugerResidenser");

                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
